// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdatePaymentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDlt;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final TextInputEditText etCVV;

  @NonNull
  public final TextInputEditText etCardNo;

  @NonNull
  public final TextInputEditText etCardType;

  @NonNull
  public final TextInputEditText etExpiration;

  @NonNull
  public final TextInputEditText etNameOnCard;

  @NonNull
  public final ImageView imageView22;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView tvTotAmt;

  private ActivityUpdatePaymentBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnDlt,
      @NonNull Button btnUpdate, @NonNull CheckBox checkBox, @NonNull TextInputEditText etCVV,
      @NonNull TextInputEditText etCardNo, @NonNull TextInputEditText etCardType,
      @NonNull TextInputEditText etExpiration, @NonNull TextInputEditText etNameOnCard,
      @NonNull ImageView imageView22, @NonNull TextView textView16, @NonNull TextView textView17,
      @NonNull TextView textView7, @NonNull TextView textView9, @NonNull TextView tvTotAmt) {
    this.rootView = rootView;
    this.btnDlt = btnDlt;
    this.btnUpdate = btnUpdate;
    this.checkBox = checkBox;
    this.etCVV = etCVV;
    this.etCardNo = etCardNo;
    this.etCardType = etCardType;
    this.etExpiration = etExpiration;
    this.etNameOnCard = etNameOnCard;
    this.imageView22 = imageView22;
    this.textView16 = textView16;
    this.textView17 = textView17;
    this.textView7 = textView7;
    this.textView9 = textView9;
    this.tvTotAmt = tvTotAmt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdatePaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdatePaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdatePaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDlt;
      Button btnDlt = ViewBindings.findChildViewById(rootView, id);
      if (btnDlt == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.etCVV;
      TextInputEditText etCVV = ViewBindings.findChildViewById(rootView, id);
      if (etCVV == null) {
        break missingId;
      }

      id = R.id.etCardNo;
      TextInputEditText etCardNo = ViewBindings.findChildViewById(rootView, id);
      if (etCardNo == null) {
        break missingId;
      }

      id = R.id.etCardType;
      TextInputEditText etCardType = ViewBindings.findChildViewById(rootView, id);
      if (etCardType == null) {
        break missingId;
      }

      id = R.id.etExpiration;
      TextInputEditText etExpiration = ViewBindings.findChildViewById(rootView, id);
      if (etExpiration == null) {
        break missingId;
      }

      id = R.id.etNameOnCard;
      TextInputEditText etNameOnCard = ViewBindings.findChildViewById(rootView, id);
      if (etNameOnCard == null) {
        break missingId;
      }

      id = R.id.imageView22;
      ImageView imageView22 = ViewBindings.findChildViewById(rootView, id);
      if (imageView22 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.tvTotAmt;
      TextView tvTotAmt = ViewBindings.findChildViewById(rootView, id);
      if (tvTotAmt == null) {
        break missingId;
      }

      return new ActivityUpdatePaymentBinding((ConstraintLayout) rootView, btnDlt, btnUpdate,
          checkBox, etCVV, etCardNo, etCardType, etExpiration, etNameOnCard, imageView22,
          textView16, textView17, textView7, textView9, tvTotAmt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
